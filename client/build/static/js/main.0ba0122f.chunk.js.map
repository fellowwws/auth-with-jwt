{"version":3,"sources":["layouts/SingleColumnCentered.js","utils/validators.js","utils/sanitisers.js","providers/authProvider.js","components/SignUpForm.js","components/LogInForm.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["children","Container","Row","Col","sm","md","size","offset","isValidEmail","email","isEmpty","test","isValidPassword","password","min","max","length","isValidMatch","confirm","isEqual","value","trim","a","b","strim","String","f","string","upperCaseCharAtZero","charAt","toUpperCase","slice","includes","split","map","join","AuthContext","createContext","AuthProvider","props","useState","user","setUser","authState","setAuthState","useEffect","token","localStorage","getItem","jwt","decode","expired","exp","Date","now","Provider","logIn","Promise","resolve","reject","fetch","method","mode","headers","body","JSON","stringify","then","response","ok","json","data","setItem","error","catch","logOut","removeItem","SignUpForm","auth","useContext","history","useHistory","forename","setForename","surname","setSurname","setEmail","setPassword","setConfirm","errors","setErrors","displayErrors","setDisplayErrors","isSubmitting","setIsSubmitting","Form","onSubmit","event","preventDefault","setTimeout","signUp","push","console","log","server","message","Alert","color","form","FormGroup","Label","className","for","Input","onChange","e","target","type","name","id","placeholder","invalid","FormFeedback","Button","block","style","display","alignItems","justifyContent","disabled","Spinner","LogInForm","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","DropdownMenu","right","DropdownItem","divider","window","Dashboard","SignUp","LogIn","PrivateRoute","rest","render","location","to","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ba0122f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nexport default function ({ children }) {\n  return (\n    <Container>\n      <Row>\n        <Col sm='12' md={{ size: 8, offset: 2 }}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","export const isValidEmail = (email) => {\n  const regex = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n\n  if (isEmpty(email)) {\n    return \"Email address is required\";\n  }\n  if (!regex.test(email)) {\n    return \"Email address must be valid. E.g you@example.com\";\n  }\n\n  return false;\n};\n\nexport const isValidPassword = (password, min = 8, max = 12) => {\n  if (isEmpty(password)) {\n    return \"Password is required\";\n  }\n  if (password.length < min || password.length > max) {\n    return `Password length must be min ${min}, max ${max} chars`;\n  }\n\n  return false;\n};\n\nexport const isValidMatch = (password, confirm) => {\n  if (isEmpty(confirm)) {\n    return \"Confirm password is required\";\n  }\n  if (!isEqual(password, confirm)) {\n    return \"Confirm password does not match password\";\n  }\n\n  return false;\n};\n\nexport const isEmpty = (value = \"\") => {\n  if (value.trim() === \"\") return true;\n  return false;\n};\n\nexport const isEqual = (a, b) => {\n  if (a === b) return true;\n  return false;\n};\n","export const strim = (value) => String(value).trim();\n\nexport const f = (string) => {\n  const upperCaseCharAtZero = (string) =>\n    string.charAt(0).toUpperCase() + string.slice(1);\n  if (string.includes(\"-\")) {\n    let surnames = string.split(\"-\");\n    return surnames.map(upperCaseCharAtZero).join(\"-\");\n  }\n\n  return upperCaseCharAtZero(string);\n};\n","import React, { useState, useEffect, createContext } from \"react\";\nimport jwt from \"jsonwebtoken\";\n\nexport const AuthContext = createContext();\n\nfunction AuthProvider(props) {\n  const [user, setUser] = useState(null);\n  const [authState, setAuthState] = useState(\"loading\");\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"token\"); // string || null\n\n    if (!token) {\n      setUser(null);\n      setAuthState(\"done\");\n    } else {\n      token = jwt.decode(token); // object\n\n      if (!expired(token)) {\n        setUser(token);\n        setAuthState(\"done\");\n      } else {\n        setUser(null);\n        setAuthState(\"done\");\n      }\n    }\n  }, []);\n\n  const expired = (token) => token.exp < Date.now() / 1000;\n\n  function logIn(email, password) {\n    return new Promise((resolve, reject) => {\n      fetch(\"/auth/login\", {\n        method: \"POST\",\n        mode: \"no-cors\", // no-cors, *cors, same-origin\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }), // body data type must match \"Content-Type\" header\n      })\n        .then((response) => {\n          if (!response.ok) {\n            response.json().then((error) => reject(error));\n          } else {\n            response.json().then((data) => {\n              localStorage.setItem(\"token\", data.token);\n              const user = jwt.decode(data.token);\n              setUser(user);\n              resolve();\n            });\n          }\n        })\n        .catch((error) => reject(error));\n    });\n  }\n\n  function logOut() {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, authState, logIn, logOut }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthProvider;\n\n// function authenticate(token) {\n//   return new Promise((resolve, reject) => {\n//     fetch(\"http://localhost:5000/auth/authenticate\", {\n//       method: \"POST\",\n//       mode: \"cors\", // no-cors, *cors, same-origin\n//       headers: {\n//         authorization: \"Bearer \" + token,\n//       },\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           response.json().then((error) => reject(error));\n//         } else {\n//           response.json().then((success) => resolve(success));\n//         }\n//       })\n//       .catch((error) => reject(error));\n//   });\n// }\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  Col,\n  Row,\n  Alert,\n  Spinner,\n} from \"reactstrap\";\nimport {\n  isValidEmail,\n  isValidPassword,\n  isValidMatch,\n  isEmpty,\n  isEqual,\n} from \"../utils/validators\";\nimport { f, strim } from \"../utils/sanitisers\";\nimport { AuthContext } from \"../providers/authProvider\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nfunction SignUpForm() {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n\n  const [forename, setForename] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n\n  const [errors, setErrors] = useState({\n    forename: false,\n    surname: false,\n    email: false,\n    password: false,\n    confirm: false,\n  });\n\n  const [displayErrors, setDisplayErrors] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    setErrors({\n      forename: isEmpty(forename),\n      surname: isEmpty(surname),\n      email: isValidEmail(email),\n      password: isValidPassword(password),\n      confirm: isValidMatch(password, confirm),\n    });\n  }, [forename, surname, email, password, confirm]);\n\n  const hasErrors = () => {\n    return (\n      errors.forename ||\n      errors.surname ||\n      errors.email ||\n      errors.password ||\n      errors.confirm\n    );\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (hasErrors()) {\n      if (displayErrors === false) {\n        setDisplayErrors(true);\n      }\n    } else {\n      setIsSubmitting(true);\n\n      setTimeout(() => {\n        signUp(forename, surname, email, password)\n          .then(() => {\n            auth\n              .logIn(email, password)\n              .then(() => {\n                history.push(\"/\");\n              })\n              .catch((error) => console.log(error));\n            setIsSubmitting(false);\n          })\n          .catch((error) => {\n            setErrors({ ...errors, server: error.message });\n            setIsSubmitting(false);\n          });\n      }, 1000);\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      {errors.server && (\n        <Alert color='danger'>\n          <strong>Error</strong> {errors.server}\n        </Alert>\n      )}\n\n      <Row form>\n        <Col md={6}>\n          <FormGroup>\n            <Label className='sr-only' for='first-name'>\n              First Name\n            </Label>\n            <Input\n              value={forename}\n              onChange={(e) => setForename(f(strim(e.target.value)))}\n              type='text'\n              name='first-name'\n              id='first-name'\n              placeholder='First name'\n              invalid={displayErrors && errors.forename}\n            />\n            <FormFeedback>First name is required</FormFeedback>\n          </FormGroup>\n        </Col>\n\n        <Col md={6}>\n          <FormGroup>\n            <Label className='sr-only' for='last-name'>\n              Last Name\n            </Label>\n            <Input\n              value={surname}\n              onChange={(e) => setSurname(f(strim(e.target.value)))}\n              type='text'\n              name='last-name'\n              id='last-name'\n              placeholder='Last name'\n              invalid={displayErrors && errors.surname}\n            />\n            <FormFeedback>Last name is required</FormFeedback>\n          </FormGroup>\n        </Col>\n      </Row>\n\n      <FormGroup>\n        <Label className='sr-only' for='email'>\n          Email\n        </Label>\n        <Input\n          value={email}\n          onChange={(e) => setEmail(strim(e.target.value))}\n          type='email'\n          name='email'\n          id='email'\n          placeholder='Email address'\n          invalid={displayErrors && errors.email}\n        />\n        <FormFeedback>{errors.email}</FormFeedback>\n      </FormGroup>\n\n      <FormGroup>\n        <Label className='sr-only' for='password'>\n          Password\n        </Label>\n        <Input\n          value={password}\n          onChange={(e) => setPassword(strim(e.target.value))}\n          type='password'\n          name='password'\n          id='password'\n          placeholder='Password'\n          invalid={displayErrors && errors.password}\n        />\n        <FormFeedback>{errors.password}</FormFeedback>\n      </FormGroup>\n\n      <FormGroup>\n        <Label className='sr-only' for='confirmPassword'>\n          Confirm Password\n        </Label>\n        <Input\n          value={confirm}\n          onChange={(e) => setConfirm(strim(e.target.value))}\n          type='password'\n          name='password'\n          id='confirmPassword'\n          placeholder='Confirm Password'\n          invalid={displayErrors && errors.confirm}\n        />\n        <FormFeedback>{errors.confirm}</FormFeedback>\n      </FormGroup>\n      <Button\n        block\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        color='primary'\n        size='lg'\n        disabled={isSubmitting}\n      >\n        {isSubmitting ? <Spinner color='light' /> : \"Sign up\"}\n      </Button>\n    </Form>\n  );\n}\n\nexport default SignUpForm;\n\nfunction signUp(forename, surname, email, password) {\n  return new Promise((resolve, reject) => {\n    fetch(\"/auth/signup\", {\n      method: \"POST\",\n      mode: \"no-cors\", // no-cors, *cors, same-origin\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ forename, surname, email, password }), // body data type must match \"Content-Type\" header\n    })\n      .then((response) => {\n        if (!response.ok) {\n          response.json().then((error) => reject(error));\n        } else {\n          response.json().then((data) => resolve(data));\n        }\n      })\n      .catch((error) => reject(error));\n  });\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  FormText,\n  Spinner,\n} from \"reactstrap\";\nimport { isValidEmail, isValidPassword } from \"../utils/validators\";\nimport { AuthContext } from \"../providers/authProvider\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nfunction LogInForm() {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errors, setErrors] = useState({\n    email: false,\n    password: false,\n  });\n\n  const [displayErrors, setDisplayErrors] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    setErrors({\n      ...errors,\n      email: isValidEmail(email),\n      password: isValidPassword(password),\n    });\n  }, [email, password]);\n\n  const hasErrors = () => {\n    return errors.email || errors.password;\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (hasErrors()) {\n      if (displayErrors === false) {\n        setDisplayErrors(true);\n      }\n    } else {\n      setIsSubmitting(true);\n      setTimeout(() => {\n        auth\n          .logIn(email, password)\n          .then(() => {\n            setIsSubmitting(false);\n            history.push(\"/\");\n          })\n          .catch((error) => {\n            setErrors({ ...errors, server: error.message });\n            setIsSubmitting(false);\n          });\n      }, 1000);\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      {errors.server && (\n        <Alert color='danger'>\n          <strong>Error</strong> {errors.server}\n        </Alert>\n      )}\n      <FormGroup>\n        <Label className='sr-only' for='email'>\n          Email\n        </Label>\n        <Input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type='email'\n          name='email'\n          id='email'\n          placeholder='Email address'\n          invalid={displayErrors && errors.email}\n        />\n        <FormFeedback>{errors.email}</FormFeedback>\n      </FormGroup>\n      <FormGroup>\n        <Label className='sr-only' for='password'>\n          Password\n        </Label>\n        <Input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type='password'\n          name='password'\n          id='password'\n          placeholder='Password'\n          invalid={displayErrors && errors.password}\n        />\n        <FormFeedback>{errors.password}</FormFeedback>\n      </FormGroup>\n      <Button\n        block\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        color='primary'\n        size='lg'\n        disabled={isSubmitting}\n      >\n        {isSubmitting ? <Spinner color='light' /> : \"Log in\"}\n      </Button>\n    </Form>\n  );\n}\n\nexport default LogInForm;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"../providers/authProvider\";\n\nexport default function () {\n  const { user, authState, logOut } = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  if (authState === \"loading\") return null;\n\n  return (\n    <Navbar color='light' light expand='sm'>\n      <NavbarBrand href='/'>Authmaster2000</NavbarBrand>\n\n      <NavbarToggler onClick={() => setIsOpen(!isOpen)} />\n\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className='w-100 mr-auto' navbar>\n          <NavItem className='flex-grow-1'>\n            <NavLink href='https://github.com/fellowwws'>GitHub</NavLink>\n          </NavItem>\n          {user && (\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                {user ? user.name.first : \"User\"}\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem disabled>Settings</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem\n                  onClick={() => {\n                    if (window.confirm(\"Are you sure?\")) {\n                      logOut();\n                      history.push(\"/\");\n                    }\n                  }}\n                >\n                  Log Out\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          )}\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Layout from \"./layouts/SingleColumnCentered\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport LogInForm from \"./components/LogInForm\";\nimport { AuthContext } from \"./providers/authProvider\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  const { authState } = useContext(AuthContext);\n\n  if (authState === \"loading\") return null;\n\n  return (\n    <Router>\n      <Navbar />\n\n      <Switch>\n        <PrivateRoute exact path='/'>\n          <Dashboard />\n        </PrivateRoute>\n        <Route path='/signup'>\n          <SignUp />\n        </Route>\n        <Route path='/login'>\n          <LogIn />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Welcome!</h2>\n    </div>\n  );\n}\n\nfunction SignUp() {\n  return (\n    <Layout>\n      <h1 className='text-center py-2'>Sign Up</h1>\n      <SignUpForm />\n    </Layout>\n  );\n}\n\nfunction LogIn() {\n  return (\n    <Layout>\n      <h1 className='text-center py-2'>Log In 🔐</h1>\n      <LogInForm />\n    </Layout>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => (user ? children : <Redirect to='/login' />)}\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AuthProvider from \"./providers/authProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}